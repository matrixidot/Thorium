
print "Addition";
print "Expected: " + 7;
print 5 + 2;
print (5 + 2) == 7;

print "Subtraction";
print "Expected: " + 3;
print 5 - 2;
print (5 - 2) == 3;

print "Multiplication";
print "Expected: " + 10;
print 5 * 2;
print (5 * 2) == 10;

print "Division (Integer Division)";
print "Expected: " + 2;
print 5 / 2;
print (5 / 2) == 2;

print "Division (Floating-Point Division)";
print "Expected: " + 2.5;
print 5.0 / 2;
print (5.0 / 2) == 2.5;

print "Modulo";
print "Expected: " + 1;
print 5 % 2;
print (5 % 2) == 1;

print "Exponentiation";
print "Expected: " + 8;
print 2 ** 3;
print (2 ** 3) == 8;

print "Negative Exponent";
print "Expected: " + 0.5;
print 2 ** -1;
print (2 ** -1) == 0.5;

print "Zero Exponent";
print "Expected: " + 1;
print 2 ** 0;
print (2 ** 0) == 1;

print "Bitwise AND";
print "Expected: " + 1;
print 5 & 3;
print (5 & 3) == 1;

print "Bitwise OR";
print "Expected: " + 7;
print 5 | 3;
print (5 | 3) == 7;

print "Bitwise XOR";
print "Expected: " + 6;
print 5 ^ 3;
print (5 ^ 3) == 6;

print "Bitwise NOT";
print "Expected: " + -6;
print ~5;
print (~5) == -6;

print "Bitwise Left Shift";
print "Expected: " + 10;
print 5 << 1;
print (5 << 1) == 10;

print "Bitwise Right Shift";
print "Expected: " + 2;
print 5 >> 1;
print (5 >> 1) == 2;

print "Equal To";
print "Expected: " + true;
print 5 == 5;
print (5 == 5) == true;

print "Not Equal To";
print "Expected: " + true;
print 5 != 2;
print (5 != 2) == true;

print "Less Than";
print "Expected: " + false;
print 5 < 2;
print (5 < 2) == false;

print "Less Than or Equal To";
print "Expected: " + true;
print 5 <= 5;
print (5 <= 5) == true;

print "Greater Than";
print "Expected: " + true;
print 5 > 2;
print (5 > 2) == true;

print "Greater Than or Equal To";
print "Expected: " + true;
print 5 >= 5;
print (5 >= 5) == true;

print "Addition and Multiplication without Grouping";
print "Expected: " + 11;
print 5 + 2 * 3;
print (5 + 2 * 3) == 11;

print "Addition and Multiplication with Grouping";
print "Expected: " + 21;
print (5 + 2) * 3;
print ((5 + 2) * 3) == 21;

print "Complex Expression with Grouping";
print "Expected: " + 49;
print (5 + 2) * (3 + 4);
print ((5 + 2) * (3 + 4)) == 49;

print "Nested Grouping";
print "Expected: " + 3.5;
print ((5 + 2) * (3 - 1)) / (2 ** 2);
print (((5 + 2) * (3 - 1)) / (2 ** 2)) == 3.5;

print "Mixed Operators and Types";
print "Expected: " + 15.0;
print (5 + 2.5) * (3 - 1);
print ((5 + 2.5) * (3 - 1)) == 15.0;

print "Unary Minus";
print "Expected: " + -2;
print -5 + 3;
print (-5 + 3) == -2;

print "Double Negation";
print "Expected: " + 5;
print -(-5);
print (-(-5)) == 5;

print "Floating-Point Addition";
print "Expected: " + 7.0;
print 5.0 + 2;
print (5.0 + 2) == 7.0;

print "Floating-Point Multiplication";
print "Expected: " + 12.5;
print 5 * 2.5;
print (5 * 2.5) == 12.5;

print "Exponentiation with Floating-Point Base";
print "Expected: " + 6.25;
print 2.5 ** 2;
print (2.5 ** 2) == 6.25;

print "Exponentiation with Floating-Point Exponent";
print "Expected: " + 5.656854249492381;
print 2 ** 2.5;
print (2 ** 2.5) == 5.656854249492381;

print "Complex Bitwise Expression";
print "Expected: " + 3;
print (5 & 3) | (2 ^ 1);
print ((5 & 3) | (2 ^ 1)) == 3;

print "Bitwise Shift and Addition";
print "Expected: " + 21;
print (5 << 2) + (3 >> 1);
print ((5 << 2) + (3 >> 1)) == 21;

print "Relational and Arithmetic";
print "Expected: " + true;
print (5 + 2) == 7;
print ((5 + 2) == 7) == true;

print "Relational with Arithmetic and Grouping";
print "Expected: " + true;
print (5 + 2) * 3 > 20;
print ((5 + 2) * 3 > 20) == true;

print "Complex Logical Expression";
print "Expected: " + false;
print (5 > 2) == (3 < 1);
print ((5 > 2) == (3 < 1)) == false;

print "Mixed Bitwise and Arithmetic";
print "Expected: " + 8;
print (5 | 2) + (3 & 1);
print ((5 | 2) + (3 & 1)) == 8;

print "Bitwise NOT and Addition";
print "Expected: " + -4;
print ~5 + 2;
print (~5 + 2) == -4;

print "Chained Operations";
print "Expected: " + 9;
print 5 + 2 * 3 - 4 / 2;
print (5 + 2 * 3 - 4 / 2) == 9;

print "Grouped Chained Operations";
print "Expected: " + -3.5;
print (5 + 2) * (3 - 4) / 2;
print ((5 + 2) * (3 - 4) / 2) == -3.5;

print "Complex Exponentiation";
print "Expected: " + 25;
print (2 + 3) ** (1 + 1);
print ((2 + 3) ** (1 + 1)) == 25;

print "Negative Numbers in Exponentiation";
print "Expected: " + -8;
print (-2) ** 3;
print ((-2) ** 3) == -8;

print "Bitwise Operations with Shifts and Grouping";
print "Expected: " + 3;
print ((5 & 3) << 1) + ((2 | 1) >> 1);
print (((5 & 3) << 1) + ((2 | 1) >> 1)) == 3;

print "Modulo with Negative Dividend";
print "Expected: " + -1;
print -5 % 2;
print (-5 % 2) == -1;

print "Large Exponentiation";
print "Expected: " + 1024;
print 2 ** 10;
print (2 ** 10) == 1024;

print "Exponentiation to Negative Exponent";
print "Expected: " + 0.125;
print 2 ** -3;
print (2 ** -3) == 0.125;

print "Bitwise AND with Zero";
print "Expected: " + 0;
print 5 & 0;
print (5 & 0) == 0;

print "Bitwise OR with Zero";
print "Expected: " + 5;
print 5 | 0;
print (5 | 0) == 5;

print "Bitwise XOR with Zero";
print "Expected: " + 5;
print 5 ^ 0;
print (5 ^ 0) == 5;

print "Bitwise NOT of Zero";
print "Expected: " + -1;
print ~0;
print (~0) == -1;

print "Left Shift by Zero";
print "Expected: " + 5;
print 5 << 0;
print (5 << 0) == 5;

print "Right Shift by Zero";
print "Expected: " + 5;
print 5 >> 0;
print (5 >> 0) == 5;

print "Zero Left Shift";
print "Expected: " + 0;
print 0 << 5;
print (0 << 5) == 0;

print "Zero Right Shift";
print "Expected: " + 0;
print 0 >> 5;
print (0 >> 5) == 0;

print "Exponentiation with Zero Base";
print "Expected: " + 0;
print 0 ** 5;
print (0 ** 5) == 0;

print "Exponentiation with Zero Exponent";
print "Expected: " + 1;
print 5 ** 0;
print (5 ** 0) == 1;

print "Complex Expression with All Operators";
print "Expected: " + -0.5;
print ((5 + 2) * (3 - 1) / (2 ** 2)) - (5 & 3) + (~2 | 1);
print (((5 + 2) * (3 - 1) / (2 ** 2)) - (5 & 3) + (~2 | 1)) == -0.5;